sentence        ::= data_literal*

data_literal    ::= list_literal
                  | tuple_literal
                  | map_literal
                  | primitive_literal

list_literal    ::= '[' (data_literal (',' data_literal)*)? ']'

tuple_literal   ::= '{' (data_literal (',' data_literal)*)? '}'

map_literal     ::= '%{' (key_value (',' key_value)*)? '}'

key_value       ::= (data_literal '=>' data_literal) | (key data_literal)

key             ::= ':' (atom | key)

primitive_literal ::= integer | atom | boolean

integer         ::= digit+
                    | digit+ '_' digit+

atom            ::= ':' (letter | '_') (alphanumeric | '_')*

boolean         ::= 'true' | 'false'

digit           ::= '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9'

letter          ::= 'a' | 'b' | 'c' | ... | 'z' | 'A' | 'B' | 'C' | ... | 'Z'

alphanumeric    ::= letter | digit
